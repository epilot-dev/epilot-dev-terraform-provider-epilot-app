// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	tfTypes "github.com/epilot-dev/terraform-provider-epilot-app/internal/provider/types"
	"github.com/epilot-dev/terraform-provider-epilot-app/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *AppDataSourceModel) RefreshFromSharedApp(resp *shared.App) {
	if resp != nil {
		r.AppID = types.StringPointerValue(resp.AppID)
		if resp.ConfigOptions == nil {
			r.ConfigOptions = nil
		} else {
			r.ConfigOptions = &tfTypes.ConfigOptions{}
			if resp.ConfigOptions.ComponentType != nil {
				r.ConfigOptions.ComponentType = types.StringValue(string(*resp.ConfigOptions.ComponentType))
			} else {
				r.ConfigOptions.ComponentType = types.StringNull()
			}
			r.ConfigOptions.Configuration = []tfTypes.ComponentConfiguration{}
			if len(r.ConfigOptions.Configuration) > len(resp.ConfigOptions.Configuration) {
				r.ConfigOptions.Configuration = r.ConfigOptions.Configuration[:len(resp.ConfigOptions.Configuration)]
			}
			for configurationCount, configurationItem := range resp.ConfigOptions.Configuration {
				var configuration1 tfTypes.ComponentConfiguration
				configuration1.Key = types.StringPointerValue(configurationItem.Key)
				if configurationItem.Type != nil {
					configuration1.Type = types.StringValue(string(*configurationItem.Type))
				} else {
					configuration1.Type = types.StringNull()
				}
				configuration1.Value = types.StringPointerValue(configurationItem.Value)
				if configurationCount+1 > len(r.ConfigOptions.Configuration) {
					r.ConfigOptions.Configuration = append(r.ConfigOptions.Configuration, configuration1)
				} else {
					r.ConfigOptions.Configuration[configurationCount].Key = configuration1.Key
					r.ConfigOptions.Configuration[configurationCount].Type = configuration1.Type
					r.ConfigOptions.Configuration[configurationCount].Value = configuration1.Value
				}
			}
		}
		r.Enabled = types.BoolPointerValue(resp.Enabled)
		r.InstallationID = types.StringPointerValue(resp.InstallationID)
		r.InstalledAt = types.StringPointerValue(resp.InstalledAt)
		r.InstalledBy = types.StringPointerValue(resp.InstalledBy)
		r.OrganizationID = types.StringPointerValue(resp.OrganizationID)
	}
}
